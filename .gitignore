
#-------------------------------------------------------------------------------
#
# Maintainer:   jeffskinnerbox@yahoo.com / www.jeffskinnerbox.me
# Version:      1.2.0
#
# DESCRIPTION:
#    This file specifies intentionally untracked files that Git should ignore.
#
#    Each line in this .gitignore file specifies a regular expression pattern
#    that, when matched, the corresponding file will NOT be include in Git processing.
#
# DOCUMENTATION:
#    Some basic rules to help you to set up your .gitignore file correctly:
#
#      * Any line that starts with a hash (#) is a comment.
#      * The \ character escapes special characters.
#      * The / character means that the rule applies only to files and folders located in the same folder.
#      * An asterisk (*) means any number of characters (zero or more).
#      * Two asterisks (**) specify any number of subdirectories.
#      * A question mark (?) replaces zero or one character.
#      * An exclamation sign (!) designates the inversion rule
#        (i.e., it includes any file that was excluded by a previous pattern).
#      * Blank lines are ignored, so you can use them to add space and make your file easier to read.
#      * Adding / on the end ignores entire directory paths.
#
# TESTING:
#    This command will simply output the filename if it's ignored by your .gitignore rules and no output if it's not.
#      git check-ignore <filename>
#    The -v flag provides verbose output, showing the matching pattern from your .gitignore file
#    and the line number that caused the file to be ignored.
#      git check-ignore -v <filename>
#    You can specify multiple files to check their ignore status simultaneously.
#      git check-ignore -v <file1> <file2> <file3>
#    This command will check all files and directories in the current repository and output any that are being ignored by your .gitignore rules.
#      git check-ignore -v **/*#
#
# SOURCE:
#    https://git-scm.com/docs/gitignore
#    https://git-scm.com/docs/git-check-ignore
#
#-------------------------------------------------------------------------------


### --------------------------- Project Specific --------------------------- ###
#.local/share/Trash                        # this will ignore a directory named 'Trask' and everything inside it
#**/Trash/*                                # ignore a folder named 'Trash' and all its contents, regardless of its location in the repository

swap/
undo/

pkg-vim/.vim/backup/*
pkg-vim/.vim/bundle/*
pkg-tmux/.tmux/plugins/*

#pkg-vim/.vim/bundle/ansible-vim
#pkg-vim/.vim/bundle/matchit
#pkg-vim/.vim/bundle/nerdcommenter
#pkg-vim/.vim/bundle/nerdtree
#pkg-vim/.vim/bundle/python-mode
#pkg-vim/.vim/bundle/vim-arduino-syntax
#pkg-vim/.vim/bundle/vim-markdown
#pkg-vim/.vim/bundle/vim-openscad

#pkg-tmux/.tmux/plugins/*                  # ignore evertything in 'plugins' directory
#pkg-tmux/.vim/bundle/*                  # ignore evertything in 'plugins' directory
#!pkg-tmux/.tmux/plugins/tpm               # ... but make an exception for 'tpm' directory
#!pkg-tmux/.tmux/plugins/README.md         # ... and make an exception for 'README.md' file

#pkg-tmux/.tmux/plugins/tmux-prefix-highlight
#pkg-tmux/.tmux/plugins/vim-tmux-navigator
#pkg-tmux/.tmux/plugins/tmux-sensible
#pkg-tmux/.tmux/plugins/tmux-yank
#pkg-tmux/.tmux/plugins/tpm

pkg-vim/.vim/.netrwhist


### ------------------------------- General -------------------------------- ###

### Compiled Source ###
*.pyc
*.com
*.class
*.dll
*.exe
*.o
*.so
*.bin
*.elf

### Packages ###
*.7z
*.dmg
*.gz
*.iso
*.jar
*.rar
*.tar
*.zip

### Unit test / linters & formaters / coverage reports ###
htmlcov/
.tox/
.coverage
.cache
nosetests.xml
coverage.xml
.mypy_cache
.ruff_cache

### Files containing secrets ###
secret*
secrets*

### Logs & Databases ###
*.log
*.sql
*.sqlite
*.dblite
.ipynb_checkpoints
.ropeproject
__pycache__

### OS Generated Files ###
*.out
*.swp
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
Icon?
ehthumbs.db
Thumbs.db

### Python files & directory ###
__pycache__/
*.py[oc]
build/
dist/
wheels/
*.egg-info
.venv

### Vagrant files & directory ###
*.box
.vagrant

#-------------------------------------------------------------------------------

