
#-------------------------------------------------------------------------------
#
# Maintainer:   jeffskinnerbox@yahoo.com / www.jeffskinnerbox.me
# Version:      0.0.2
#
# DESCRIPTION:
#     This configuration is targeted for tmux 3.2a or greater
#
# DOCUMENTATION:
#     NOTE: sending two (aka '<prefix> <prefix>' causes the keyboard to lock).  'ctrl+c' get you out
#
# SOURCE:
#     [How I Use Tmux With Neovim For An Awesome Dev Workflow On My Mac](https://www.youtube.com/watch?v=U-omALWIBos)
#     [See this example](https://github.com/dwmkerr/dotfiles/blob/main/tmux/tmux.conf)
#
#-------------------------------------------------------------------------------


# ------ Global Options --------------------------------------------------------
# change the default prefix key
unbind-key C-b                                                           # disable the old prefix
set-option -g prefix C-s                                                 # change the control prefix from 'ctrl+b' to 'ctrl+s'
bind-key C-s send-prefix                                                 # send 'ctrl+s' to applications by pressing it twice

# start windows & panes indexes at 1 instead of zero, this can't be done for session - https://unix.stackexchange.com/questions/313577/how-to-make-tmux-sessions-count-from-1-instead-of-0
set-option -g base-index 1                                               # base index to number windows, the default is zero
set-option -g pane-base-index 1                                          # base index to number panes, the default is zero
set-window-option -g pane-base-index 1
set-option -g renumber-windows on                                        # when a window is closed in a session, automatically renumber the other windows in numerical order

# customize limits set on resources
set-option -g buffer-limit 10                                            # number of buffers created before old buffers are removed
set-option -g message-limit 1000                                         # number of error or information messages to save in the message log
set-option -g history-limit 5000                                         # maximum number of lines held in window history

# time limits for user activity
set-option -g escape-time 1000                                           # time in milliseconds tmux waits after an escape is input to determine if it is part of a function or meta key sequences, default is 500 milliseconds
set-option -g display-panes-time 2000                                    # time in milliseconds for which the indicators shown by the display-panes command appear
set-option -g display-time 5000                                          # time for which status line messages and other on-screen indicators are displayed. If set to 0, messages and indicators are displayed until a key is pressed. time is in milliseconds.
set-option -g lock-after-time 0                                          # lock the session (like the lock-session command) after number seconds of inactivity, default is not to lock (set to 0)

# window & pane creation settings
set-option -g default-shell '/usr/bin/bash'                              # command executed when a new window or pane is created

# terminal color settings
#set-option -g default-terminal 'xterm-256color'                          # the default value of the TERM environment variable, for tmux to work correctly, this must be set to ‘screen’, ‘tmux’ or a derivative of them
#set-option -ga terminal-overrides ',256col*:Tc'                          # option allows individual terminfo(5) capabilities to be set instead
set-option -g default-terminal '$TERM'                                   # the default value of the TERM environment variable, for tmux to work correctly, this must be set to ‘screen’, ‘tmux’ or a derivative of them
set-option -ga terminal-overrides ',$TERM:Tc'                            # option allows individual terminfo(5) capabilities to be set instead

# when should tmux server exit
set-option -s exit-empty on                                              # tmux exiting when there is no active window, default is 'on'



# ------ Session Options -------------------------------------------------------
# creation and killing of sessions
bind-key C-b send-keys 'tat && exit' 'C-m'    # this allows us "break out" a session based on the current pane, even cleaning up the pane after creating the new session.
bind-key K run-shell 'tmux switch-client -n \; kill-session -t "$(tmux display-message -p "#S")" || tmux kill-session'   # kill the current session and switch us to another session, keeping us connected to tmux throughout



# ------ Window Options --------------------------------------------------------
# automatic renumbering of windows when deleted
#set-option -wg automatic-rename on                                    # tmux will rename the window automatically, default is 'on'

# monitor for activity in the window
#set-option monitor-activity on                                        # windows with activity are highlighted in the status line



# ------ Pane Options ----------------------------------------------------------
# active pane highlighting
set-option -g window-active-style bg=black                             # for the active pane, change the background color
set-option -g pane-active-border fg=red                                # for the active pane, change the border foreground color
set-option -ag pane-active-border bg=black                             # for the active pane, change the border background color



# ------ Customize the Status Bar ----------------------------------------------
# status bar highlights
set-option -g status-style fg=black,bg=lightgreen                      # change the status bar background color
set-option -g window-status-style fg=black,bg=yellow                   # change inactive window color on status bar
set-option -g window-status-current-style fg=white,bold,bg=darkgreen   # change active window color on status bar
set-option -g message-style fg=white,bold,bg=blue                      # color of message on status bar

# change the tmux status bar background color depending on copy-mode
set-hook -g pane-mode-changed 'if -F "#{m/r:(copy|view)-mode,#{pane_mode}}" "set status-style bg=gold" "set -u status-style"'   # https://superuser.com/questions/1513035/change-the-tmux-status-bar-background-color-depending-on-copy-mode

# customize the status bar layout format
set-option -g status-left 'Session - #S | Windows - '                  # show session & number of windows on left
set-option -g status-right '#{prefix_highlight} | %a %Y-%m-%d %H:%M'   # show prefix status, date & time on right

# customize status bar left & right lengths
set-option -g status-left-length 40                                    # max length of the left status line, default is 10
set-option -g status-right-length 40                                   # max length of the left status line, default is 10

# customize frequency of status bar updates
set-option -g status-interval 60                                       # update the status line every interval seconds, default value is 15 seconds, zero disables redrawing at interval



# ------ Customize the Mouse ---------------------------------------------------
# customize mouse features
# to see complete list of the vi-like functionality, '<prefix>: list-keys -T copy-mode-vi'
set-option -g mouse on                                                 # enable the mouse within tmux, particularly for re-sizing panes and tmux-yank plugin, default is 'off'
set-option -g @yank_with_mouse on                                      # To yank with the mouse, click & drag with the primary button to begin selection, and release to yank, default is 'off'
bind-key -T copy-mode-vi v send-keys -X begin-selection                # setup 'v' begin/end selection as in Vim
bind-key -T copy-mode-vi C-v send-keys -X rectangle-toogle
bind-key -T copy-mode-vi y send-keys -X copy-selection-and-cancel
#unbind-key -T copy-mode-vi MouseDragEnd1Pane                           # don't exit copy mode when dragging with mouse



# ------ Vi Copy & Paste Support -----------------------------------------------
# vi-style select, copy, and paste in the tmux session (by default, tmux uses emacs style)
set-option -g mode-keys vi                                             # use vi style key bindings in copy mode, default is emacs
set-option -g status-keys vi                                           # use vi style key bindings in the status line, default is emacs
set-option -g @yank_selection_mouse 'clipboard'                        # linux has several cut & paste clipboards: 'clipboard', 'primary', secondary', default is 'primary' when mouse selection is 'on'
set-option -g @yank_selection 'clipboard'                              # linux has several cut & paste clipboards: 'clipboard', 'primary', secondary'
set-option -g @yank_action 'copy-pipe-and-cancel'                      # by default ('copy-pipe-and-cancel'), tmux-yank will exit copy mode after yanking text, if not desired set to 'copy-pipe'

# use xclip to paste with the system clipboard
#bind-key C-c run-shell 'tmux save-buffer - | xclip -in -selection clipboard'                         # use '<prefix> Cntl+c' to copy text
bind-key C-v run-shell "tmux set-buffer \"$(xclip -out -selection clipboard)\"; tmux paste-buffer"   # use '<prefix> Cntl+v' to paste text



# ------ Pane Splits -----------------------------------------------------------
# change the pane horizontal & vertical split command keys
# flag '-c' execute a shell command, and '#{pane_current_path}' make the current working directory of your new pane the same as the one you’ve just left.
unbind-key %                                                           # disable the old key
bind-key | split-window -h -c '#{pane_current_path}'                   # change the horizontal split control key to '|'
unbind-key '"'                                                         # disable the old key
bind-key - split-window -v -c '#{pane_current_path}'                   # change the vertical split control key to '-'



# ------ Edit & Reload Configuration -------------------------------------------
# makes it easier to edit and then reload tmux configuration file to active changes
bind-key M split-window -h 'vim ~/.config/tmux/tmux.conf'
bind-key r source-file ~/.config/tmux/tmux.conf \; display-message "file '~/.config/tmux/tmux.conf' reloaded"
#bind-key r source-file ~/.config/tmux/tmux.conf \; display-popup -h 20 -w 80 "file '~/.config/tmux/tmux.conf' reloaded"   # show reloaded in a popup



# ------ Other Helpful Tools ---------------------------------------------------
# popup tools
#bind-key h command-prompt "split-window -h 'exec man tmux'"            # popup the manual page for tmux with '<prefix> h'
#bind-key h command-prompt "split-window -h "exec tmux list-keys | pg"
#bind-key ? list-keys                                                   # help remind you of what key bindings you have setup



# ------ Plugins ---------------------------------------------------------------
# use tmux plugin manager (tpm) plugin to load plugins
set-option -g @plugin 'tmux-plugins/tpm'                               # plugin to install the tmux plugin manager (tpm)

# list of plugin to be installed with tpm
# remember '<prefix> I' to install, '<prefix> Alt+d' to remove, to update '<prefix> U', and to list plugins
set-option -g @plugin 'tmux-plugins/tmux-yank'                         # copy to the system clipboard in tmux
set-option -g @plugin 'tmux-plugins/tmux-sensible'                     # basic tmux settings everyone can agree on
set-option -g @plugin 'christoomey/vim-tmux-navigator'                 # seamless navigation between tmux panes and vim splits (you need to install companion nvim package)
set-option -g @plugin 'tmux-plugins/tmux-prefix-highlight'             # highlights status line when you press tmux '<prefix>' key

# initialize tmux plugin manager (keep this line at the very bottom of tmux.conf)
run-shell '~/.tmux/plugins/tpm/tpm'                                     # location of the tmux plugin manager (tpm) executable

